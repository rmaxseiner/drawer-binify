services:
  frontend:
    build:
      context: ..
      dockerfile: docker/frontend/Dockerfile
    ports:
      - "3001:80"
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:8000
    depends_on:
      - backend
    networks:
      - gridfinity-prod
    restart: unless-stopped

  backend:
    build:
      context: ..
      dockerfile: docker/backend/Dockerfile
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres/${POSTGRES_DB}
      - MODEL_OUTPUT_DIR=/app/model-output
    volumes:
      - model_output:/app/model-output
    depends_on:
      - postgres
    networks:
      - gridfinity-prod
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_prod_data:/var/lib/postgresql/data
      - ../docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - gridfinity-prod
    restart: unless-stopped

volumes:
  postgres_prod_data:
  model_output:

networks:
  gridfinity-prod:
    name: gridfinity-prod